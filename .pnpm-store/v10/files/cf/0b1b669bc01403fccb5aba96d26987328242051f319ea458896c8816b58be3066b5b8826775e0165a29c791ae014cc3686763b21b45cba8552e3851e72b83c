import { c as d } from "../common-CU_gyL-S.mjs";
const g = d({
  name: "sortImportsByTypeAndSize",
  meta: {
    type: "layout",
    docs: {
      description: "Group imports: nonâ€‘type imports first, then type-only; each group sorted by declaration length."
    },
    fixable: "code",
    schema: [],
    messages: {
      wrongOrder: "Imports should be grouped: non-type first, then type-only; each group sorted by length."
    }
  },
  create(s) {
    const l = s.sourceCode;
    let r = [];
    return {
      Program(o) {
        r = o.body.filter(
          (n) => n.type === "ImportDeclaration"
        );
      },
      "Program:exit"() {
        if (r.length < 2) return;
        const o = r.map((e) => {
          const t = l.getText(e);
          return {
            decl: e,
            text: t,
            isTypeOnly: e.importKind === "type",
            len: t.length
          };
        }), n = [
          ...o.filter((e) => !e.isTypeOnly).sort((e, t) => e.len - t.len),
          ...o.filter((e) => e.isTypeOnly).sort((e, t) => e.len - t.len)
        ];
        for (const [e, t] of o.entries())
          if (t.decl !== n[e].decl) {
            s.report({
              node: t.decl,
              messageId: "wrongOrder",
              fix(p) {
                const a = n.map((y) => y.text).join(`
`), i = r[0], c = r[r.length - 1];
                return p.replaceTextRange([i.range[0], c.range[1]], a);
              }
            });
            break;
          }
      }
    };
  },
  defaultOptions: []
});
export {
  g as default
};
//# sourceMappingURL=sort_imports_by_type_and_size.mjs.map
