{"version":3,"file":"errors-j8BTGk4y.js","sources":["../src/errors.ts"],"sourcesContent":["/**\n * Easily accessible error classes for Swarm\n * @module @nhtio/swarm/errors\n */\n\n/**\n * Describes the options for the SwarmError class.\n */\nexport interface SwarmErrorOptions {\n  /**\n   * The cause data property of an Error instance indicates the specific original cause of the error.\n   */\n  cause?: Error\n  /**\n   * How many rows to trim from the stack trace.\n   * This is useful for removing the stack trace of the current function from the error.\n   */\n  trim?: number\n}\n\n/**\n * Base class for all Swarm errors.\n * @extends Error\n */\nclass SwarmError extends Error {\n  /** @private */\n  readonly $__name: string\n  /** @private */\n  readonly $__message: string\n\n  /**\n   * Creates a new SwarmError instance.\n   * @param message The error message.\n   * @param options The error options.\n   */\n  constructor(message: string, options?: SwarmErrorOptions) {\n    const superOptions = options ? { cause: options.cause } : {}\n    super(message, superOptions)\n    const ErrorConstructor = this.constructor\n    Object.setPrototypeOf(this, ErrorConstructor)\n    this.$__name = ErrorConstructor.name\n    this.$__message = message\n    if ('function' === typeof Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorConstructor)\n    }\n    if (this.stack && options && options.trim && options.trim > 0) {\n      const stackLines = this.stack.split('\\n')\n      stackLines.splice(0, options.trim)\n      this.stack = stackLines.join('\\n')\n    }\n  }\n\n  get name() {\n    return this.$__name\n  }\n\n  get message() {\n    return this.$__message\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.constructor.name\n  }\n\n  toString() {\n    return `${this.name}: ${this.message}`\n  }\n\n  [Symbol.toPrimitive](hint: 'number' | 'string' | 'default') {\n    switch (hint) {\n      case 'string':\n        return this.toString()\n      default:\n        return true\n    }\n  }\n\n  static [Symbol.hasInstance](instance: unknown) {\n    if ((typeof instance === 'object' && instance !== null) || typeof instance === 'function') {\n      const proto = Object.getPrototypeOf(instance)\n      return proto.name === this.name || proto === this\n    }\n    return false\n  }\n}\n\nexport type { SwarmError }\n\n/**\n * Thrown by the {@link @nhtio/swarm!Swarm | Swarm} class when trying to be initialized in an environment that does not support Service Workers.\n */\nexport class UnsupportedEnvironmentError extends SwarmError {\n  constructor() {\n    super('Unable to setup instance because Service Workers are not supported in this environment')\n  }\n}\n\n/**\n * Thrown by the {@link @nhtio/swarm!Swarm | Swarm} class when trying to be initialize more than one instance within the same context.\n */\nexport class AlreadyInitializedInContextError extends SwarmError {\n  constructor() {\n    super(\n      'Unable to setup instance because another instance is already initialized in this context'\n    )\n  }\n}\n\n/**\n * Thrown by the {@link @nhtio/swarm!Swarm | Swarm} class when a request to the leader is not answered.\n */\nexport class RequestTimeoutError extends SwarmError {\n  constructor(event: string | number | symbol) {\n    super(`Request timed out while waiting for event \"${String(event)}\".`)\n  }\n}\n\n/**\n * Thrown by the {@link @nhtio/swarm!Swarm | Swarm} class trying to retrieve an instance without having previously or currently provided an encryption key.\n */\nexport class MissingEncryptionKey extends SwarmError {\n  constructor() {\n    super(`An encryption key has not been provided at any point in the runtime.`)\n  }\n}\n"],"names":["SwarmError","message","options","superOptions","__publicField","ErrorConstructor","stackLines","hint","instance","proto","UnsupportedEnvironmentError","AlreadyInitializedInContextError","RequestTimeoutError","event","MissingEncryptionKey"],"mappings":"iLAwBA,MAAMA,UAAmB,KAAM,CAW7B,YAAYC,EAAiBC,EAA6B,CACxD,MAAMC,EAAeD,EAAU,CAAE,MAAOA,EAAQ,OAAU,GAC1D,MAAMD,EAASE,CAAY,EAXpBC,EAAA,gBAEAA,EAAA,mBAUP,MAAMC,EAAmB,KAAK,YAO9B,GANO,OAAA,eAAe,KAAMA,CAAgB,EAC5C,KAAK,QAAUA,EAAiB,KAChC,KAAK,WAAaJ,EACC,OAAO,MAAM,mBAA5B,YACI,MAAA,kBAAkB,KAAMI,CAAgB,EAE5C,KAAK,OAASH,GAAWA,EAAQ,MAAQA,EAAQ,KAAO,EAAG,CAC7D,MAAMI,EAAa,KAAK,MAAM,MAAM;AAAA,CAAI,EAC7BA,EAAA,OAAO,EAAGJ,EAAQ,IAAI,EAC5B,KAAA,MAAQI,EAAW,KAAK;AAAA,CAAI,CACnC,CACF,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,OACd,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,UACd,CAEA,IAAK,OAAO,WAAW,GAAI,CACzB,OAAO,KAAK,YAAY,IAC1B,CAEA,UAAW,CACT,MAAO,GAAG,KAAK,IAAI,KAAK,KAAK,OAAO,EACtC,CAEA,CAAC,OAAO,WAAW,EAAEC,EAAuC,CAC1D,OAAQA,EAAM,CACZ,IAAK,SACH,OAAO,KAAK,WACd,QACS,MAAA,EACX,CACF,CAEA,OAAQ,OAAO,WAAW,EAAEC,EAAmB,CAC7C,GAAK,OAAOA,GAAa,UAAYA,IAAa,MAAS,OAAOA,GAAa,WAAY,CACnF,MAAAC,EAAQ,OAAO,eAAeD,CAAQ,EAC5C,OAAOC,EAAM,OAAS,KAAK,MAAQA,IAAU,IAC/C,CACO,MAAA,EACT,CACF,CAOO,MAAMC,UAAoCV,CAAW,CAC1D,aAAc,CACZ,MAAM,wFAAwF,CAChG,CACF,CAKO,MAAMW,UAAyCX,CAAW,CAC/D,aAAc,CACZ,MACE,0FAAA,CAEJ,CACF,CAKO,MAAMY,UAA4BZ,CAAW,CAClD,YAAYa,EAAiC,CAC3C,MAAM,8CAA8C,OAAOA,CAAK,CAAC,IAAI,CACvE,CACF,CAKO,MAAMC,UAA6Bd,CAAW,CACnD,aAAc,CACZ,MAAM,sEAAsE,CAC9E,CACF"}