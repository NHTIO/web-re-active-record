"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const y=require("../common-Z_zcXedN.js"),u=y.createRule({name:"sortImportsByTypeAndSize",meta:{type:"layout",docs:{description:"Group imports: nonâ€‘type imports first, then type-only; each group sorted by declaration length."},fixable:"code",schema:[],messages:{wrongOrder:"Imports should be grouped: non-type first, then type-only; each group sorted by length."}},create(s){const l=s.sourceCode;let r=[];return{Program(o){r=o.body.filter(n=>n.type==="ImportDeclaration")},"Program:exit"(){if(r.length<2)return;const o=r.map(e=>{const t=l.getText(e);return{decl:e,text:t,isTypeOnly:e.importKind==="type",len:t.length}}),n=[...o.filter(e=>!e.isTypeOnly).sort((e,t)=>e.len-t.len),...o.filter(e=>e.isTypeOnly).sort((e,t)=>e.len-t.len)];for(const[e,t]of o.entries())if(t.decl!==n[e].decl){s.report({node:t.decl,messageId:"wrongOrder",fix(i){const a=n.map(d=>d.text).join(`
`),p=r[0],c=r[r.length-1];return i.replaceTextRange([p.range[0],c.range[1]],a)}});break}}}},defaultOptions:[]});exports.default=u;
//# sourceMappingURL=sort_imports_by_type_and_size.cjs.map
