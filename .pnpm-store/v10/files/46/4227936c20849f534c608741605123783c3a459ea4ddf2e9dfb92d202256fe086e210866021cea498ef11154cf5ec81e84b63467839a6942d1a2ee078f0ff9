{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["/**\n * @module @nhtio/eslint-config\n */\n\nimport { configApp } from './libs/adonisjs_eslint_config'\nimport {\n  nht,\n  vueEssential,\n  vueStronglyRecommended,\n  vueRecommended,\n  vueTypescript,\n  ignore,\n  overrides,\n  json,\n  markdown,\n  plugins as pluginsBlock,\n} from '@nhtio/eslint-config/blocks'\n\nimport type { TSESLint } from '@typescript-eslint/utils'\nimport type { FlatConfig } from '@typescript-eslint/utils/ts-eslint'\n\nconst blocks = [\n  ignore,\n  markdown,\n  json,\n  nht,\n  ...vueEssential,\n  ...vueStronglyRecommended,\n  ...vueRecommended,\n  vueTypescript,\n  overrides,\n]\n\n/**\n * Configures ESLint to use an opinionated config tailored for NHT Development\n */\nexport const configure = (\n  ...configBlocksToMerge: FlatConfig.Config[]\n): TSESLint.FlatConfig.ConfigArray => {\n  const merged = configApp(...configBlocksToMerge)\n  const fixed = merged.map((block) => {\n    if ('plugins' in block) {\n      const { plugins } = block\n      for (const plugin in plugins) {\n        if (!(plugin in pluginsBlock.plugins!)) {\n          pluginsBlock.plugins![plugin] = plugins[plugin]\n        }\n      }\n      delete block.plugins\n    }\n    return block\n  })\n  return [pluginsBlock, ...fixed, ...blocks]\n}\n\nexport default configure\n"],"names":["blocks","ignore","markdown","json","nht","vueEssential","vueStronglyRecommended","vueRecommended","vueTypescript","overrides","configure","configBlocksToMerge","fixed","configApp","block","plugins","plugin","pluginsBlock"],"mappings":"kXAqBMA,EAAS,CACbC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACA,GAAGC,EAAA,aACH,GAAGC,EAAA,uBACH,GAAGC,EAAA,eACHC,EAAA,IACAC,EAAA,OACF,EAKaC,EAAY,IACpBC,IACiC,CAEpC,MAAMC,EADSC,EAAAA,UAAU,GAAGF,CAAmB,EAC1B,IAAKG,GAAU,CAClC,GAAI,YAAaA,EAAO,CAChB,KAAA,CAAE,QAAAC,CAAY,EAAAD,EACpB,UAAWE,KAAUD,EACbC,KAAUC,UAAa,UAC3BA,EAAAA,QAAa,QAASD,CAAM,EAAID,EAAQC,CAAM,GAGlD,OAAOF,EAAM,OACf,CACO,OAAAA,CAAA,CACR,EACD,MAAO,CAACG,EAAAA,QAAc,GAAGL,EAAO,GAAGZ,CAAM,CAC3C"}