/**
 * Provides the typescript types used by the serialization library.
 * @module @nhtio/web-serialization/types
 */
import type { DateTime, Duration, Interval } from 'luxon';
/**
 * Defines the union of all serializable primitive types.
 */
export type SerializablePrimitive = string | number | boolean | bigint | null | undefined;
/**
 * Defines a union for all the serializable typed arrays.
 */
export type SerializableTypedArray = Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | Uint16Array | Int32Array | Uint32Array | Float32Array | Float64Array | BigInt64Array | BigUint64Array;
/**
 * Defines all the types which can be be serialized
 */
export type Serializable = SerializablePrimitive | Date | RegExp | ArrayBuffer | DataView | DateTime | Duration | Interval | SerializableTypedArray | Serializable[] | {
    [key: string]: Serializable;
} | Map<Serializable, Serializable> | Set<Serializable> | Error | EvalError | RangeError | ReferenceError | SyntaxError | TypeError | URIError;
